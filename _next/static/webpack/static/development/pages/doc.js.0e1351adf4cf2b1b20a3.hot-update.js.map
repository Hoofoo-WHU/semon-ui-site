{"version":3,"file":"static/webpack/static/development/pages/doc.js.0e1351adf4cf2b1b20a3.hot-update.js","sources":["webpack:///./components/Demo/index.tsx","webpack:///./demos/button.tsx"],"sourcesContent":["import React, { createRef } from 'react'\nimport { Button } from '@semon/semon-ui'\nimport './demo.scss'\nimport MD from 'markdown-it'\nconst md = new MD({ html: true })\n\nexport interface DemoProps extends React.Props<{}> {\n  className?: string\n  language?: string\n  code: string\n  description: string\n  title: string\n}\n\nclass Demo extends React.Component<DemoProps, { showCode: boolean }> {\n  constructor(props: DemoProps) {\n    super(props)\n    this.codeClickHandle = this.codeClickHandle.bind(this)\n  }\n  readonly state = {\n    showCode: false\n  }\n  codeClickHandle() {\n    this.setState((pre) => ({ showCode: !pre.showCode }))\n  }\n  ref = createRef<HTMLPreElement>()\n  render() {\n    const { children, description, title, className, language, code } = this.props\n    const height = this.state.showCode && this.ref.current ? this.ref.current.offsetHeight : 0\n    return <section className={`${className} demo-component-wrapper`}>\n      <div className='container'>{children}</div>\n      <div className='description'>\n        <span className='title'>{title}</span>\n        <span className='content' dangerouslySetInnerHTML={{ __html: md.render(description) }} />\n        <div title={this.state.showCode ? '隐藏代码' : '显示代码'}><Button className='demon-component-code-button' size='large' shape='circle' icon='code' onClick={this.codeClickHandle}></Button></div>\n      </div>\n      <div className='code' style={{ height }}>\n        <pre className={`language-${language || 'jsx'}`} ref={this.ref}>\n          <code className={`language-${language || 'jsx'}`}>\n            {code}\n          </code>\n        </pre>\n      </div>\n    </section >\n  }\n}\n\nexport default Demo","import React from 'react'\nimport Demo from '../components/Demo'\nimport { Button } from '@semon/semon-ui'\n\nconst demos = [\n  <Demo className='component-button-type-demo'\n    key='type'\n    title='按钮类型'\n    description='按钮有四种类型：主按钮、次按钮、虚线按钮、危险按钮'\n    code={\n      `import { Button } from '@semon/semon-ui'\\n\\n<Button type='primary'>Primary</Button>\\n<Button>Default</Button>\\n<Button type='dashed'>Dashed</Button>\\n<Button type='danger'>Danger</Button>`\n    }\n  >\n    <Button className='button-demo' type='primary'>Primary</Button>\n    <Button className='button-demo'>Default</Button>\n    <Button className='button-demo' type='dashed'>Dashed</Button>\n    <Button className='button-demo' type='danger'>Danger</Button>\n    <style jsx global>{`\n    .component-button-type-demo .button-demo{\n      margin-right: 8px;\n      margin-bottom: 12px;\n    }\n  `}</style>\n  </Demo>,\n  <Demo className='component-button-icon-demo'\n    key='icon'\n    title='图标按钮'\n    description='当需要在`Button`内嵌入`Icon`时，可以设置`icon/iconRight`属性，或者直接在`Button`内使用`Icon`组件。'\n    code={\n      `import { Button } from '@semon/semon-ui'\\n\\n<Button type='primary' shape='circle' icon='search' />\\n<Button type='primary' icon='search'>Search</Button>\\n<Button shape='circle' icon='search' />\\n<Button icon='search'>Search</Button>\\n<Button icon='left'>Prev</Button>\\n<Button iconRight='right'>Next</Button>`\n    }\n  >\n    <Button className='button-demo' type='primary' shape='circle' icon='search' />\n    <Button className='button-demo' type='primary' icon='search'>Search</Button>\n    <Button className='button-demo' shape='circle' icon='search' />\n    <Button className='button-demo' icon='search'>Search</Button>\n    <Button className='button-demo' icon='left'>Prev</Button>\n    <Button className='button-demo' iconRight='right'>Next</Button>\n    <style jsx global>{`\n    .component-button-icon-demo .button-demo{\n      margin-right: 8px;\n      margin-bottom: 12px;\n    }\n  `}</style>\n  </Demo>,\n  <Demo className='component-button-size-demo'\n    key='size'\n    title='图标大小'\n    description='按钮有大、中、小三种尺寸。</br>通过设置`size`为`large` `small`分别把按钮设为大、小尺寸。若不设置`size`，则尺寸为中。</br>按钮组合中按钮大小由按钮组合的`size`决定。'\n    code={\n      `import { Button } from '@semon/semon-ui'\\n\\n<Button type='primary' shape='circle' icon='search' />\\n<Button type='primary' icon='search'>Search</Button>\\n<Button shape='circle' icon='search' />\\n<Button icon='search'>Search</Button>\\n<Button icon='left'>Prev</Button>\\n<Button iconRight='right'>Next</Button>`\n    }\n  >\n    <Button className='button-demo' size='small'>Small</Button>\n    <Button className='button-demo'>Default</Button>\n    <Button className='button-demo' size='large'>Large</Button>\n    <Button className='button-demo' type='primary' size='small'>Small</Button>\n    <Button className='button-demo' type='primary'>Default</Button>\n    <Button className='button-demo' type='primary' size='large'>Large</Button>\n    <br />\n    <Button className='button-demo' icon='search'>Search</Button>\n    <Button className='button-demo' icon='left'>Prev</Button>\n    <Button className='button-demo' iconRight='right'>Next</Button>\n    <style jsx global>{`\n  .component-button-size-demo .button-demo{\n    margin-right: 8px;\n    margin-bottom: 12px;\n  }\n`}</style>\n  </Demo>\n]\n\nexport default demos\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AASA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAKA;AADA;AACA;AALA;AACA;AACA;AAFA;AAGA;AACA;;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA9BA;AACA;AAgCA;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAAA;AAAA;AAsBA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAAA;AAAA;AA2BA;;;;A","sourceRoot":""}