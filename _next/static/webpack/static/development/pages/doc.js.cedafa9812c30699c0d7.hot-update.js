webpackHotUpdate("static/development/pages/doc.js",{

/***/ "./docs/grid/demos.tsx":
/*!*****************************!*\
  !*** ./docs/grid/demos.tsx ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-jsx/style */ "./node_modules/styled-jsx/style.js");
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _components_Demo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../components/Demo */ "./components/Demo/index.tsx");
/* harmony import */ var _semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @semon/semon-ui */ "../semon-ui-react/dist/index.js");
/* harmony import */ var _semon_semon_ui__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__);
var _jsxFileName = "/Users/WangShuo/Documents/GitHub/semon-ui-site/docs/grid/demos.tsx";




var demos = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_1__["Fragment"], {
  __source: {
    fileName: _jsxFileName,
    lineNumber: 5
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_components_Demo__WEBPACK_IMPORTED_MODULE_2__["default"], {
  title: "\u57FA\u7840\u6805\u683C",
  description: "\u901A\u8FC7`row`\u548C`col`\u7EC4\u4EF6\uFF0C\u5E76\u901A\u8FC7`col`\u7EC4\u4EF6\u7684`span`\u5C5E\u6027\u6211\u4EEC\u5C31\u53EF\u4EE5\u81EA\u7531\u5730\u7EC4\u5408\u5E03\u5C40\u3002",
  code: "import { Row, Col } from '@semon/semon-ui'\n\nReactDOM.render(\n  <div>\n    <Row>\n      <Col span='12'>span-12</Col>\n      <Col span='12'>span-12</Col>\n    </Row>\n    <Row>\n      <Col span='8'>span-8</Col>\n      <Col span='8'>span-8</Col>\n      <Col span='8'>span-8</Col>\n    </Row>\n    <Row>\n      <Col span='6'>span-6</Col>\n      <Col span='6'>span-6</Col>\n      <Col span='6'>span-6</Col>\n      <Col span='6'>span-6</Col>\n    </Row> \n  </div>,\n  container\n)",
  className: "jsx-473167457" + " " + 'component-grid-demo-basic',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 6
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  className: "jsx-473167457" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 33
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "12",
  className: "jsx-473167457" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 34
  },
  __self: undefined
}, "span-12"), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "12",
  className: "jsx-473167457" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 35
  },
  __self: undefined
}, "span-12")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  className: "jsx-473167457" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 37
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "8",
  className: "jsx-473167457" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 38
  },
  __self: undefined
}, "span-8"), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "8",
  className: "jsx-473167457" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 39
  },
  __self: undefined
}, "span-8"), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "8",
  className: "jsx-473167457" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 40
  },
  __self: undefined
}, "span-8")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  className: "jsx-473167457" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 42
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "6",
  className: "jsx-473167457" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 43
  },
  __self: undefined
}, "span-6"), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "6",
  className: "jsx-473167457" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 44
  },
  __self: undefined
}, "span-6"), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "6",
  className: "jsx-473167457" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 45
  },
  __self: undefined
}, "span-6"), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "6",
  className: "jsx-473167457" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 46
  },
  __self: undefined
}, "span-6")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
  id: "473167457",
  __self: undefined
}, ".component-grid-demo-basic .demo-row{margin-bottom:12px;}.component-grid-demo-basic .demo-row .demo-col{background-color:#1aa1e6;color:#fff;text-align:center;line-height:3em;}.component-grid-demo-basic .demo-row .demo-col:nth-child(2n + 1){background-color:#5ebded;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/WangShuo/Documents/GitHub/semon-ui-site/docs/grid/demos.tsx */")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_components_Demo__WEBPACK_IMPORTED_MODULE_2__["default"], {
  title: "\u5206\u680F\u95F4\u9694",
  description: "`Row`\u7EC4\u4EF6\u63D0\u4F9B`gutter`\u5C5E\u6027\u6765\u6307\u5B9A\u6BCF\u4E00\u680F\u4E4B\u95F4\u7684\u95F4\u9694\uFF0C\u9ED8\u8BA4\u95F4\u9694\u4E3A 0\u3002",
  code: "import { Row, Col } from '@semon/semon-ui'\n\nReactDOM.render(\n  <Row gutter={12}>\n    <Col span='8'>\n      <div className='inner-box'>span-8</div>\n    </Col>\n    <Col span='8'>\n      <div className='inner-box'>span-8</div>\n    </Col>\n    <Col span='8'>\n      <div className='inner-box'>span-8</div>\n    </Col>\n  </Row>,\n  container\n)",
  className: "jsx-2128336681" + " " + 'component-grid-demo-gutter',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 63
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  gutter: 12,
  className: "jsx-2128336681" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 85
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "8",
  className: "jsx-2128336681" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 86
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-2128336681" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 87
  },
  __self: undefined
}, "span-8")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "8",
  className: "jsx-2128336681" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 89
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-2128336681" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 90
  },
  __self: undefined
}, "span-8")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "8",
  className: "jsx-2128336681" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 92
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-2128336681" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 93
  },
  __self: undefined
}, "span-8"))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
  id: "2128336681",
  __self: undefined
}, ".component-grid-demo-gutter .demo-row{margin-bottom:12px;}.component-grid-demo-gutter .inner-box{background-color:#1aa1e6;line-height:3em;color:white;text-align:center;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/WangShuo/Documents/GitHub/semon-ui-site/docs/grid/demos.tsx */")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_components_Demo__WEBPACK_IMPORTED_MODULE_2__["default"], {
  key: "grid-offset",
  title: "\u5206\u680F\u504F\u79FB",
  description: "\u901A\u8FC7\u5236\u5B9A`Col`\u7EC4\u4EF6\u7684`offset`\u5C5E\u6027\u53EF\u4EE5\u6307\u5B9A\u5206\u680F\u504F\u79FB\u7684\u680F\u6570\u3002",
  code: "import { Row, Col } from '@semon/semon-ui'\n\nReactDOM.render(\n  <div>\n    <Row gutter={12}>\n      <Col span='6'>\n        <div className='inner-box'>span-6</div>\n      </Col>\n      <Col span='6' offset='6'>\n        <div className='inner-box'>span-6</div>\n      </Col>\n    </Row>\n    <Row gutter={12}>\n      <Col span='6' offset='6'>\n        <div className='inner-box'>span-6</div>\n      </Col>\n      <Col span='6' offset='6'>\n        <div className='inner-box'>span-6</div>\n      </Col>\n    </Row>\n    <Row gutter={12}>\n      <Col span='12' offset='6'>\n        <div className='inner-box'>span-12</div>\n      </Col>\n    </Row>\n  </div>,\n  container\n)",
  className: "jsx-270763279" + " " + 'component-grid-demo-offset',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 108
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  gutter: 12,
  className: "jsx-270763279" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 143
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "6",
  className: "jsx-270763279" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 144
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-270763279" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 145
  },
  __self: undefined
}, "span-6")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "6",
  offset: "6",
  className: "jsx-270763279" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 147
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-270763279" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 148
  },
  __self: undefined
}, "span-6"))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  gutter: 12,
  className: "jsx-270763279" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 151
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "6",
  offset: "6",
  className: "jsx-270763279" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 152
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-270763279" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 153
  },
  __self: undefined
}, "span-6")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "6",
  offset: "6",
  className: "jsx-270763279" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 155
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-270763279" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 156
  },
  __self: undefined
}, "span-6"))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  gutter: 12,
  className: "jsx-270763279" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 159
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "12",
  offset: "6",
  className: "jsx-270763279" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 160
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-270763279" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 161
  },
  __self: undefined
}, "span-12"))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
  id: "270763279",
  __self: undefined
}, ".component-grid-demo-offset .demo-row{margin-bottom:12px;}.component-grid-demo-offset .inner-box{background-color:#1aa1e6;line-height:3em;color:white;text-align:center;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/WangShuo/Documents/GitHub/semon-ui-site/docs/grid/demos.tsx */")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_components_Demo__WEBPACK_IMPORTED_MODULE_2__["default"], {
  title: "\u5206\u680F\u987A\u5E8F",
  description: "`Col`\u7EC4\u4EF6\u63D0\u4F9B`order`\u5C5E\u6027\u6765\u6307\u5B9A\u51FA\u73B0\u987A\u5E8F\u3002",
  code: "import { Row, Col } from '@semon/semon-ui'\n\nReactDOM.render(\n  <Row gutter={12}>\n    <Col span='8' order='3'>\n      <div className='inner-box'>col-1 order-3</div>\n    </Col>\n    <Col span='8' order='2'>\n      <div className='inner-box'>col-2 order-2</div>\n    </Col>\n    <Col span='8' order='1'>\n      <div className='inner-box'>col-3 order-1</div>\n    </Col>\n  </Row>,\n  container\n)",
  className: "jsx-1365601997" + " " + 'component-grid-demo-order',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 176
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  gutter: 12,
  className: "jsx-1365601997" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 198
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "8",
  order: "3",
  className: "jsx-1365601997" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 199
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-1365601997" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 200
  },
  __self: undefined
}, "col-1 order-3")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "8",
  order: "2",
  className: "jsx-1365601997" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 202
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-1365601997" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 203
  },
  __self: undefined
}, "col-2 order-2")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "8",
  order: "1",
  className: "jsx-1365601997" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 205
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-1365601997" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 206
  },
  __self: undefined
}, "col-3 order-1"))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
  id: "1365601997",
  __self: undefined
}, ".component-grid-demo-order .demo-row{margin-bottom:12px;}.component-grid-demo-order .inner-box{background-color:#1aa1e6;line-height:3em;color:white;text-align:center;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/WangShuo/Documents/GitHub/semon-ui-site/docs/grid/demos.tsx */")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_components_Demo__WEBPACK_IMPORTED_MODULE_2__["default"], {
  key: "grid-justify",
  title: "Flex \u5E03\u5C40",
  description: "`Row`\u7EC4\u4EF6\u63D0\u4F9B`justify`\u5C5E\u6027\u6765\u6307\u5B9A`flex`\u5E03\u5C40\u65B9\u5F0F\u3002",
  code: "import { Row, Col } from '@semon/semon-ui'\n\nReactDOM.render(\n  <div>\n    <Row gutter={12}>\n      <Col span='4'>\n        <div className='inner-box'>span-4</div>\n      </Col>\n      <Col span='4'>\n        <div className='inner-box'>span-4</div>\n      </Col>\n      <Col span='4'>\n        <div className='inner-box'>span-4</div>\n      </Col>\n    </Row>\n    <Row gutter={12} justify='center'>\n      <Col span='4'>\n        <div className='inner-box'>span-4</div>\n      </Col>\n      <Col span='4'>\n        <div className='inner-box'>span-4</div>\n      </Col>\n      <Col span='4'>\n        <div className='inner-box'>span-4</div>\n      </Col>\n    </Row>\n    <Row gutter={12} justify='end'>\n      <Col span='4'>\n        <div className='inner-box'>span-4</div>\n      </Col>\n      <Col span='4'>\n        <div className='inner-box'>span-4</div>\n      </Col>\n      <Col span='4'>\n        <div className='inner-box'>span-4</div>\n      </Col>\n    </Row>\n    <Row gutter={12} justify='space-between'>\n      <Col span='4'>\n        <div className='inner-box'>span-4</div>\n      </Col>\n      <Col span='4'>\n        <div className='inner-box'>span-4</div>\n      </Col>\n      <Col span='4'>\n        <div className='inner-box'>span-4</div>\n      </Col>\n    </Row>\n    <Row gutter={12} justify='space-around'>\n      <Col span='4'>\n        <div className='inner-box'>span-4</div>\n      </Col>\n      <Col span='4'>\n        <div className='inner-box'>span-4</div>\n      </Col>\n      <Col span='4'>\n        <div className='inner-box'>span-4</div>\n      </Col>\n    </Row>\n  </div>,\n  container\n)",
  className: "jsx-3968677578" + " " + 'component-grid-demo-justify',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 221
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  gutter: 12,
  className: "jsx-3968677578" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 290
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-3968677578" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 291
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-3968677578" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 292
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-3968677578" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 294
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-3968677578" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 295
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-3968677578" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 297
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-3968677578" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 298
  },
  __self: undefined
}, "span-4"))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  gutter: 12,
  justify: "center",
  className: "jsx-3968677578" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 301
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-3968677578" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 302
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-3968677578" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 303
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-3968677578" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 305
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-3968677578" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 306
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-3968677578" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 308
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-3968677578" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 309
  },
  __self: undefined
}, "span-4"))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  gutter: 12,
  justify: "end",
  className: "jsx-3968677578" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 312
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-3968677578" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 313
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-3968677578" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 314
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-3968677578" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 316
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-3968677578" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 317
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-3968677578" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 319
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-3968677578" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 320
  },
  __self: undefined
}, "span-4"))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  gutter: 12,
  justify: "space-between",
  className: "jsx-3968677578" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 323
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-3968677578" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 324
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-3968677578" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 325
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-3968677578" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 327
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-3968677578" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 328
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-3968677578" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 330
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-3968677578" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 331
  },
  __self: undefined
}, "span-4"))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  gutter: 12,
  justify: "space-around",
  className: "jsx-3968677578" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 334
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-3968677578" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 335
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-3968677578" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 336
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-3968677578" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 338
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-3968677578" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 339
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-3968677578" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 341
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-3968677578" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 342
  },
  __self: undefined
}, "span-4"))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
  id: "3968677578",
  __self: undefined
}, ".component-grid-demo-justify .demo-row{margin-bottom:12px;}.component-grid-demo-justify .inner-box{background-color:#1aa1e6;line-height:3em;color:white;text-align:center;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/WangShuo/Documents/GitHub/semon-ui-site/docs/grid/demos.tsx */")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_components_Demo__WEBPACK_IMPORTED_MODULE_2__["default"], {
  title: "\u5206\u680F\u5BF9\u9F50",
  description: "`Row`\u7EC4\u4EF6\u63D0\u4F9B`align`\u5C5E\u6027\u6765\u6307\u5B9A\u5BF9\u9F50\u65B9\u5F0F\u3002",
  code: "import { Row, Col } from '@semon/semon-ui'\n\nReactDOM.render(\n  <div>\n    <Row gutter={12} justify='center' align='top'>\n      <Col span='4'><div className='inner-box' style={{ height: 100 }}>span-4</div></Col>\n      <Col span='4'><div className='inner-box' style={{ height: 50 }}>span-4</div></Col>\n      <Col span='4'><div className='inner-box' style={{ height: 120 }}>span-4</div></Col>\n      <Col span='4'><div className='inner-box' style={{ height: 80 }}>span-4</div></Col>\n    </Row>\n    <Row justify='space-between' align='middle'>\n      <Col span='4'><div className='inner-box' style={{ height: 100 }}>span-4</div></Col>\n      <Col span='4'><div className='inner-box' style={{ height: 50 }}>span-4</div></Col>\n      <Col span='4'><div className='inner-box' style={{ height: 120 }}>span-4</div></Col>\n      <Col span='4'><div className='inner-box' style={{ height: 80 }}>span-4</div></Col>\n    </Row>\n    <Row justify='space-around' align='bottom'>\n      <Col span='4'><div className='inner-box' style={{ height: 100 }}>span-4</div></Col>\n      <Col span='4'><div className='inner-box' style={{ height: 50 }}>span-4</div></Col>\n      <Col span='4'><div className='inner-box' style={{ height: 120 }}>span-4</div></Col>\n      <Col span='4'><div className='inner-box' style={{ height: 80 }}>span-4</div></Col>\n    </Row>\n  </div>,\n  container\n)",
  className: "jsx-134395241" + " " + 'component-grid-demo-align',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 357
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-134395241" + " " + 'wrapper',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 388
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  gutter: 12,
  justify: "center",
  align: "top",
  className: "jsx-134395241" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 389
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-134395241" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 390
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  style: {
    height: 100
  },
  className: "jsx-134395241" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 391
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-134395241" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 393
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  style: {
    height: 50
  },
  className: "jsx-134395241" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 394
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-134395241" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 396
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  style: {
    height: 120
  },
  className: "jsx-134395241" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 397
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-134395241" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 399
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  style: {
    height: 80
  },
  className: "jsx-134395241" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 400
  },
  __self: undefined
}, "span-4"))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  justify: "space-between",
  align: "middle",
  className: "jsx-134395241" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 403
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-134395241" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 404
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  style: {
    height: 100
  },
  className: "jsx-134395241" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 405
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-134395241" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 407
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  style: {
    height: 50
  },
  className: "jsx-134395241" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 408
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-134395241" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 410
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  style: {
    height: 120
  },
  className: "jsx-134395241" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 411
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-134395241" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 413
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  style: {
    height: 80
  },
  className: "jsx-134395241" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 414
  },
  __self: undefined
}, "span-4"))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  justify: "space-around",
  align: "bottom",
  className: "jsx-134395241" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 417
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-134395241" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 418
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  style: {
    height: 100
  },
  className: "jsx-134395241" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 419
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-134395241" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 421
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  style: {
    height: 50
  },
  className: "jsx-134395241" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 422
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-134395241" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 424
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  style: {
    height: 120
  },
  className: "jsx-134395241" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 425
  },
  __self: undefined
}, "span-4")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  span: "4",
  className: "jsx-134395241" + " " + 'demo-col',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 427
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  style: {
    height: 80
  },
  className: "jsx-134395241" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 428
  },
  __self: undefined
}, "span-4")))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
  id: "134395241",
  __self: undefined
}, ".component-grid-demo-align .wrapper{overflow:hidden;}.component-grid-demo-align .demo-row{margin-bottom:12px;background-color:#f8f8f8;}.component-grid-demo-align .inner-box{background-color:#1aa1e6;line-height:3em;color:white;text-align:center;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/WangShuo/Documents/GitHub/semon-ui-site/docs/grid/demos.tsx */")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_components_Demo__WEBPACK_IMPORTED_MODULE_2__["default"], {
  title: "\u54CD\u5E94\u5F0F\u5E03\u5C40",
  description: "`Col`\u7EC4\u4EF6\u63D0\u4F9B`xs` `sm` `md` `lg` `xl`\u5C5E\u6027\u6765\u6307\u5B9A\u4E0D\u540C\u5927\u5C0F\u5C4F\u5E55\u5BF9\u5E94\u7684`span`\u5C5E\u6027\uFF0C\u5982\u679C\u7F3A\u7701\u5219\u4F1A\u4F18\u5148\u66F4\u5927\u5C4F\u3002",
  code: "import { Row, Col } from '@semon/semon-ui'\n\nReactDOM.render(\n  <Row gutter={8}>\n    <Col xs='2' sm='4' md='6' lg='8' xl='10'>\n      <div className='inner-box'>Responseable</div>\n    </Col>\n    <Col xs='20' sm='16' md='12' lg='8' xl='4'>\n      <div className='inner-box'>Responseable</div>\n    </Col>\n    <Col xs='2' sm='4' md='6' lg='8' xl='10'>\n      <div className='inner-box'>Responseable</div>\n    </Col>\n  </Row>,\n  container\n)",
  className: "jsx-2551393255",
  __source: {
    fileName: _jsxFileName,
    lineNumber: 449
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  gutter: 8,
  className: "jsx-2551393255" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 471
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  xs: "2",
  sm: "4",
  md: "6",
  lg: "8",
  xl: "10",
  className: "jsx-2551393255",
  __source: {
    fileName: _jsxFileName,
    lineNumber: 472
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-2551393255" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 473
  },
  __self: undefined
}, "Responseable")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  xs: "20",
  sm: "16",
  md: "12",
  lg: "8",
  xl: "4",
  className: "jsx-2551393255",
  __source: {
    fileName: _jsxFileName,
    lineNumber: 475
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-2551393255" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 476
  },
  __self: undefined
}, "Responseable")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  xs: "2",
  sm: "4",
  md: "6",
  lg: "8",
  xl: "10",
  className: "jsx-2551393255",
  __source: {
    fileName: _jsxFileName,
    lineNumber: 478
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-2551393255" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 479
  },
  __self: undefined
}, "Responseable"))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
  id: "2551393255",
  __self: undefined
}, ".demo-row.jsx-2551393255{margin-bottom:12px;}.inner-box.jsx-2551393255{background-color:#1aa1e6;line-height:3em;color:white;text-align:center;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/WangShuo/Documents/GitHub/semon-ui-site/docs/grid/demos.tsx */")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_components_Demo__WEBPACK_IMPORTED_MODULE_2__["default"], {
  title: "\u5176\u4ED6\u5C5E\u6027\u7684\u54CD\u5E94\u5F0F",
  description: "`span` `order` `offset`\u5C5E\u6027\u53EF\u4EE5\u901A\u8FC7\u5185\u5D4C\u5230`xs` `sm` `md` `lg` `xl`\u5C5E\u6027\u4E2D\u6765\u4F7F\u7528\u3002",
  code: "import { Row, Col } from '@semon/semon-ui'\n\nReactDOM.render(\n  <Row gutter={8}>\n    <Col xs='2' sm='4' md='6' lg='8' xl='10'>\n      <div className='inner-box'>Responseable</div>\n    </Col>\n    <Col xs='20' sm='16' md='12' lg='8' xl='4'>\n      <div className='inner-box'>Responseable</div>\n    </Col>\n    <Col xs='2' sm='4' md='6' lg='8' xl='10'>\n      <div className='inner-box'>Responseable</div>\n    </Col>\n  </Row>,\n  container\n)",
  className: "jsx-2551393255",
  __source: {
    fileName: _jsxFileName,
    lineNumber: 494
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Row"], {
  gutter: 8,
  className: "jsx-2551393255" + " " + 'demo-row',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 516
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  xs: "2",
  sm: "4",
  md: "6",
  lg: "8",
  xl: "10",
  className: "jsx-2551393255",
  __source: {
    fileName: _jsxFileName,
    lineNumber: 517
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-2551393255" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 518
  },
  __self: undefined
}, "Responseable")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  xs: "20",
  sm: "16",
  md: "12",
  lg: "8",
  xl: "4",
  className: "jsx-2551393255",
  __source: {
    fileName: _jsxFileName,
    lineNumber: 520
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-2551393255" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 521
  },
  __self: undefined
}, "Responseable")), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_semon_semon_ui__WEBPACK_IMPORTED_MODULE_3__["Col"], {
  xs: "2",
  sm: "4",
  md: "6",
  lg: "8",
  xl: "10",
  className: "jsx-2551393255",
  __source: {
    fileName: _jsxFileName,
    lineNumber: 523
  },
  __self: undefined
}, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
  className: "jsx-2551393255" + " " + 'inner-box',
  __source: {
    fileName: _jsxFileName,
    lineNumber: 524
  },
  __self: undefined
}, "Responseable"))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
  id: "2551393255",
  __self: undefined
}, ".demo-row.jsx-2551393255{margin-bottom:12px;}.inner-box.jsx-2551393255{background-color:#1aa1e6;line-height:3em;color:white;text-align:center;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/WangShuo/Documents/GitHub/semon-ui-site/docs/grid/demos.tsx */")));
/* harmony default export */ __webpack_exports__["default"] = (demos);

/***/ })

})
//# sourceMappingURL=doc.js.cedafa9812c30699c0d7.hot-update.js.map